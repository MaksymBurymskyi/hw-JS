"use strict";

/* 1 Написати функцію, яка отримує на вхід два числа. Якщо обидва числа парні - функція повертає одне число помножене на інше. Якщо обидва числа непарні – функція повертає їхню суму. Якщо одне з чисел парне, а друге непарне - функція повертає непарне число */

const a = Math.round(Math.random() * 100);
const b = Math.round(Math.random() * 100);

function isEvenNum(num1, num2) {
  if (!(num1 % 2) && !(num2 % 2)) {
    return num1 * num2;
  } else if (num1 % 2 && num2 % 2) {
    return num1 + num2;
  } else {
    return num1 % 2 ? num1 : num2;
  }
}

console.log(isEvenNum(a, b));

/* 2. Створіть об‘єкт зі списком задач, де ключ - ім‘я того, хто додає задачу, значення - ще один об‘єкт, який містить у собі 2 пари ключ-значення: статус і текст задачі. Додайте декілька prompt, щоб дати можливість користувачу додавати задачі в об‘єкт. 
Приклад об‘єкту:

```jsx
const tasks = {
  Anna: {
    status: 'new',
    text: 'Create checkout page'
  }, 
  Ihor: {
    status: 'done',
    text: 'Add styles to header'
  } 
}
```

У випадку якщо такий ключ існує - показуємо повідомлення, що ця людина вже зайнята
*** за бажанням ще можна додати перевірку, якщо статус задачу done - у такому випадку змінювати статус на new, і додавати новий текст задачі */

const tasks = {
  Anna: {
    status: "new",
    text: "Create checkout page",
  },
  Ihor: {
    status: "done",
    text: "Add styles to header",
  },
  addNewTask(name = prompt("name"), task) {
    if (this[name]) {
      if (this[name].status == "new") {
        alert("worker is busy");
      } else {
        this[name].status = "new";
        this[name].text = prompt("new task");
      }
    } else {
      this[name] = {
        status: "new",
        text: prompt("new task"),
      };
    }
  },
};

console.log(tasks.addNewTask());
console.log(tasks);
